<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper"> <!-- namespace : 해당 mapper 파일의 고유한 별칭 (맘대로지어요) -->
	
	<!-- 
	
		* DML문 일 경우(숫자:결과1,0)
		<insert|update|delete id="각 sql문 식별자(맘대로지어요)" [parameterType="전달받을 자바타입(풀클래스명)|별칭"]>
		
		</insert|update|delete>
		// DML문 같은 경우 어차피 실행결과가 처리된 행수(int)이기 때문에 resultType 또는 resultMap에 대한 속성 필요 없음

		* SELECT문 일 경우(숫자,문자,어떤객체)
		<select id="각 sql문 식별자(맘대로지어요)" [parameterType="전달받을 자바타입(풀클래스명)|별칭"] 
				resultType="조회결과를반환하고자하는자바타입(int,String,..)"|resultMap="조회결과를뽑아서매핑할resultMap(Member객체)">
		</select>
		
	 -->
	 
	 <!-- ? 대신에 sql문에 전달된 객체로부터 값을 꺼낼 떄 #{필드명 또는 변수명 또는 키값} 이용 -->
	 
	 <!-- 
	 	* resultMap 마이바티스의 핵심 기능 중 하나!
	 	  ResultSet 으로부터 조회된 컬럼값 하나씩 뽑아서 내가 지정한 vo객체의 각 필드에 담는(매핑) 역할 수행
	 	  => JDBC 코드를 줄여주는 역할 수행
	 	  
	 	  <resultMap id="식별자(맘대로지어요)" type="조회결과를 담아서 반환하고자 하는 vo객체의 타입(풀클래스명)|별칭">
	 	  		<result column="조회결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
	 	  		<result column="조회결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
	 	  		<result column="조회결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
	 	  		<result column="조회결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
	 	  </resultMap>	 	  
	  -->
	
	 
	 <!-- 	
	 		Dao에서
	 		int result = sqlSession.insert("memberMapper.insertMember", m);
	 		Member m 전달받았으니까 parameterType="Member"
	 		mybatis-config.xml 에서 별칭 등록하기 전에는 복잡하게 요래 써야했음
	 <insert id="insertMember" parameterType="com.kh.mybatis.member.model.vo.Member"> -->
	 <insert id="insertMember" parameterType="Member">
	 insert
	    into member
	    (
	      user_no
	    , user_id
	    , user_pwd
	    , user_name
	    , email
	    , birthday
	    , gender
	    , phone
	    , address
	    )
	    values
	    (
	      seq_uno.nextval
	    , #{userId}
	    , #{userPwd}
	    , #{userName}
	    , #{email}
	    , #{birthday}
	    , #{gender}
	    , #{phone}
	    , #{address}
	    )
	 </insert>
	 
	 
	 <!--
	 <resultMap id="memberResultSet" type="com.kh.mybatis.member.model.vo.Member"> -->
	 <resultMap id="memberResultSet" type="Member">
	 		<!-- column : 대/소문자 안가림 | property : vo 필드명 정확히! -->
	 		<result column="USER_NO" property="userNo" />
	 		<result column="USER_ID" property="userId" />
	 		<result column="USER_PWD" property="userPwd" />
	 		<result column="USER_NAME" property="userName" />
	 		<result column="EMAIL" property="email" />
	 		<result column="BIRTHDAY" property="birthday" />
	 		<result column="GENDER" property="gender" />
	 		<result column="PHONE" property="phone" />
	 		<result column="ADDRESS" property="address" />
	 		<result column="ENROLL_DATE" property="enrollDate" />
	 		<result column="MODIFY_DATE" property="modifyDate" />
	 		<result column="STATUS" property="status" />
	 </resultMap>
	 
	 
	 <select id="loginMember" parameterType="Member" resultMap="memberResultSet">
	 select
	        user_no
	      , user_id
	      , user_pwd
	      , user_name
	      , email
	      , birthday
	      , gender
	      , phone
	      , address
	      , enroll_date
	      , modify_date
	      , status
	   from member
	  where user_id = #{userId}
	    and user_pwd = #{userPwd}
	    and status = 'Y'
	 </select>
	 
	 <update id="updateMember">
	 	update member
	 	   set user_name = #{userName}
		     , email = #{email}
		     , birthday = #{birthday}
		     , gender = #{gender}
		     , phone = #{phone}
		     , address = #{address}
		 where user_id = #{userId}
	 </update>
	 
	 <select id="selectMember" resultMap="memberResultSet">
		 select
		        user_no
		      , user_id
		      , user_pwd
		      , user_name
		      , email
		      , birthday
		      , gender
		      , phone
		      , address
		      , enroll_date
		      , modify_date
		      , status
		   from member
		  where user_id = #{userId}
		    and status = 'Y'
	 </select>
	 
	 
	 
</mapper>